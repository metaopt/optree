name: Lint

on:
  push:
    branches:
      - main
  pull_request:
  # Allow to trigger the workflow manually
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  OPTREE_CXX_WERROR: "ON"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          update-environment: true

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel pybind11

      - name: Install OpTree
        run: |
          python -m pip install -vvv --no-build-isolation --editable '.[jax,numpy,torch,lint,benchmark]'

      - name: pre-commit
        run: |
          make pre-commit

      - name: ruff
        run: |
          make ruff

      - name: flake8
        run: |
          make flake8

      - name: pylint
        run: |
          make pylint

      - name: isort and black
        run: |
          make py-format

      - name: cpplint
        run: |
          make cpplint

      - name: clang-format
        run: |
          sudo apt-get update && sudo apt-get install wget --yes
          (
            source /etc/os-release
            wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
            sudo add-apt-repository "deb http://apt.llvm.org/${UBUNTU_CODENAME} llvm-toolchain-${UBUNTU_CODENAME} main" --yes
          )
          sudo apt-get update && sudo apt-get install clang-format --yes
          make clang-format

      - name: clang-tidy
        run: |
          make clang-tidy

      - name: addlicense
        run: |
          make addlicense

      - name: mypy
        run: |
          make mypy

      - name: doctest
        run: |
          make doctest

      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt

      - name: docstyle
        run: |
          make docstyle

      - name: spelling
        run: |
          make spelling
