name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - setup.py
      - setup.cfg
      - pyproject.toml
      - MANIFEST.in
      - CMakeLists.txt
      - include/**
      - src/**
      - tests/**
      - optree/**
      - .github/workflows/tests.yml
  # Allow to trigger the workflow manually
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  OPTREE_CXX_WERROR: "ON"
  FULL_TEST_PYTHON_VERSIONS: "3.10;3.11"
  PYTHON: "python"  # to be updated
  COLUMNS: "128"

jobs:
  test:
    name: Test for Python ${{ matrix.python-version }} on ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest, windows-latest, macos-latest]
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "pypy-3.9"
          - "pypy-3.10"
        include:
          - runner: macos-13
            python-version: "3.7"
        exclude:
          - runner: macos-latest
            python-version: "3.7"  # Python 3.7 does not support macOS ARM64
      fail-fast: false
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          update-environment: true
          allow-prereleases: true

      - name: Set up Environment
        run: |
          ${{ env.PYTHON }} -m pip install --upgrade pip setuptools wheel

      - name: Install test dependencies
        shell: bash
        run: |
          if [[ ";${FULL_TEST_PYTHON_VERSIONS};" == *";${{ matrix.python-version }};"* ]]; then
            ${{ env.PYTHON }} -m pip install -r tests/requirements.txt
          fi

      - name: Test installable with C++17
        if: runner.os != 'Windows'
        run: |
          OPTREE_CXX_WERROR=OFF CMAKE_CXX_STANDARD=17 ${{ env.PYTHON }} -m pip install -vv --editable .
          ${{ env.PYTHON }} -X dev -W 'always' -W 'error' -c 'import optree'
          ${{ env.PYTHON }} -m pip uninstall -y optree

      - name: Install OpTree
        run: |
          ${{ env.PYTHON }} -m pip install -vv --editable '.[test]'

      - name: Test with pytest
        run: |
          make test PYTESTOPTS="--exitfirst"

      - name: Upload coverage to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tests/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
